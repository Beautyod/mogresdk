------------------------------------------------------------------------
Changes since MOGRE v1.6.4
------------------------------------------------------------------------

Mogre
----------
-- Updated to Ogre 1.6.5

Checker
----------
-- Added a fully featured dependency checker based on tlibc

MogreNewt
----------
-- Updated to Newton 2.10
-- Now statically linked

MOIS
----------
-- Now statically linked

------------------------------------------------------------------------
Changes since MOGRE v1.4.8
------------------------------------------------------------------------

Mogre
----------
-- Updated to Ogre 1.6.4
-- Version number now is the same as Ogre (1.6.4; this is a BETA version of Mogre!)


------------------------------------------------------------------------
Changes since MOGRE v1.4.6
------------------------------------------------------------------------

Mogre
----------
-- Updated to Ogre 1.4.8 compiled with VS2008
-- Change handle type to Normal instead Weak to avoid non-determinisc nulls references when using multithreads
-- Project code reorganization, now is easier compile mogre from scracth

MogreNewt
----------
-- Add FaceWiding support to fix body rotation and scale in static collision mode


------------------------------------------------------------------------
Changes since MOGRE v0.2.3
------------------------------------------------------------------------

Mogre
----------
-- Updated to Ogre 1.4.6
-- Version number now is the same as Ogre (1.4.6)



------------------------------------------------------------------------
Changes since MOGRE v0.2.2
------------------------------------------------------------------------

Mogre
----------
-- Updated to Ogre 1.4.5
-- Added support for Unicode Text in overlays



------------------------------------------------------------------------
Changes since MOGRE v0.2.1
------------------------------------------------------------------------

Mogre
----------
-- Added Newton samples to installer.
-- All "internal" members are now "public protected" which mean they will be public inside the project and protected outside.
-- Profiler class is now available.

------------------------------------------------------------------------
Changes since MOGRE v0.2.0
------------------------------------------------------------------------

Mogre
----------
--[Added] GaussianDistribution static method for Mogre.Math class.

MogreNewt:
------------
--[FIX] The CollisionPrimitives classes accepted a Ogre.Quaternion pointer at their constructor. Fixed it to a Mogre.Quaternion.
--[FIX] CollisionPrimitives.TreeCollision.addPoly method accepted a pointer of Ogre.Vector. Fixed it to a managed array of Mogre.Vector3
--[FIX] Protected methods entityFilter and getID of CollisionPrimitives.TreeCollisionSceneParser class accepted Ogre object pointers.
	Fixed them to the managed Mogre objects.
--Patch (http://sourceforge.net/tracker/index.php?func=detail&aid=1705154&group_id=174997&atid=871461) by bleubleu accepted

Other:
---------
--[Added] Compositor demo
--Patch (http://sourceforge.net/tracker/index.php?func=detail&aid=1704718&group_id=174997&atid=871461) by moadib accepted:
	Added LoadingBar class in ExampleApplication project
	Added BSP + CameraTrack demos


------------------------------------------------------------------------
Changes since MOGRE v0.1.9
------------------------------------------------------------------------

Mogre
--------
-- Upgraded to Ogre 1.4.0 (Eihort)
-- CeguiNet is not upgraded yet, so it's unusable at the moment.
-- New Eihort classes added.
--[Added] Timer class

MogreNewt:
------------
--[FIX] getHitCount method of BasicRaycast throws null reference exception, fixed it.

Other:
---------
--[Added] TextureFX, Transparency, and EnvMapping demos - Grizzley90
--[Modified] Fresnel demo to match the Eihort one
--Replaced Axiom input with MOIS (managed wrapper for OIS - http://sourceforge.net/projects/wgois)

------------------------------------------------------------------------
Changes since MOGRE v0.1.8.1
------------------------------------------------------------------------

Mogre
--------
-- Upgraded to Ogre 1.2.5
--[FIX] If you constructed an Ogre object and didn't keep a reference to it, Dispose would not work on it if you got it back
	through another Ogre object, and a memory leak would occur; fixed it.
--[FIX} If a STL container was empty, Back/Front properties were causing a crash; now they throw a managed exception
--[FIX] Mogre would catch Ogre exceptions but C++ destructors were not getting called, leading to possible memory leaks or
	crashes. Fixed it by compiling Ogre with /EHa for exception handling.
--[Modified] Radian, Degree, Angle now implement the IComparable interface
--[Modified] If an Ogre method returns a null SharedPtr, Mogre will return a null reference. 'IsNull' property is removed from all
	SharePtr classes; in order to see if Ogre returned a null SharedPtr just check for a null reference.
--[Added] ArchiveManager, Archive, FileSystemArchive, ZipArchive classes

Demo.ExampleApplication:
------------------------
--[FIX] Axiom.Input.KeyCodes.Minus keycode was missing, fixed it
--[FIX] Immediate keyboard input was not usable when keyboard events were used, fixed it
--[Added] Buffered mouse event handling

Other:
---------
--[Added] CelShading demo (contributed by grizzley90)


------------------------------------------------------------------------
Changes since MOGRE v0.1.7
------------------------------------------------------------------------
-- Upgraded to Ogre 1.2.4
--[FIX] VertexElement's and Matrix3/4's overrided operator == didn't check for null parameters, fixed it.
--[FIX] When a method returned a null Ogre::VertexElement*, a null reference exception was thrown; fixed it.
--[FIX] When a null string was passed to an Ogre method, an access violation crash was caused; now a NullReferenceException
	is thrown instead.
--[FIX] PlaneBoundedVolume was sometimes causing a EntryPointNotFoundException, fixed it.
--[FIX] SharedPtr objects that were public fields of classes were exposed as read-only properties. Now they are read/write as expected.
--[FIX] Conversion from/to Ogre::VertexElement and Mogre.VertexElement was incorrect, fixed it.
--[Modified] Removed overrided operator == from all *_NativePtr classes except from those that wrap Ogre classes that override
	operator ==. You can use the Equals method	in order to compare *_NativePtr objects.
--[Modified] Added a check to the implicit conversion of ResourcePtr -> SubClassPtr that checks if the Resource of ResourcePtr
	is actually of SubClass type, for early catching of programming errors.
--[Modified] Renamed RenderOperation.OperationType enumeration to 'OperationTypes' to avoid VB.NET name clash (RenderOperation has an
	'operationType' instance member and VB.NET didn't like that)
--[Added] OgreDotNet's CeguiNet bindings, a CeguiNet renderer for Mogre and ported Ogre's Gui sample
--[Added] MaterialSerializer and CompositorSerializer classes
--[Added] overrided operator == (in addition to the Equals method) for wrappers of Ogre classes that override '=='
--[Added] static method 'FromResourcePtr' to SharedPtrs of Resource subclasses (MaterialPtr etc.). Mainly for languages that
	may not support the implicit type conversion (C#/VB.NET work with implicit type conversion)
--[Added] 'Serializable' attribute to the pure .NET classes (http://www.ogre3d.org/wiki/index.php/MOGRE_pure_.NET_classes)
	except for Math, PixelBox, VertexElement.
--[Added] generic method MeshManager.CreateBezierPatch<T> where T is a struct. This method accepts a T[] array instead of a void* pointer.
--[Added] additional overload methods of RenderTarget.GetCustomAttribute for convenience (unsafe context not needed)
--[Added] Dot3Bump demo (contributed by linkerro)
--[Added] VB.NET SkeletalAnimation demo (contributed by rosenkro)


------------------------------------------------------------------------
Changes since MOGRE v0.1.6
------------------------------------------------------------------------
--Added PLSM2Helper library for accessing the options of PagingLandScapeSceneManager2
--Added additional overload methods of SceneManager.SetOption/GetOption for convenience
	(unsafe context not needed for primitive values)
--PlaneBoundedVolume gets cleaned up at finalization
--Classes with copy assignment operator get a 'CopyTo' method that has the same functionality
--Added ParticleEmmiter, ParticleAffector, ParticleEmitterFactory, ParticleAffectorFactory, and ParticleSystemFactory classes
--All *Ptr classes (MaterialPtr etc.) are immutable value classes (like String). For example, two different MaterialPtr classes
	that point to the same Ogre:Material* pointer are considered equal and return the same value at GetHashCode, so that
	collection classes (like Dictionary) can treat them as equal.
--The 'freeOnClose' parameter in the constructor of the MemoryDataStream class is removed, because if you pass a value other than
	the default, it will lead either to access violation exception, or to a memory leak.
--Classes that implement interfaces (i.e Renderable for IRenderable) have been moved from 'Mogre.Subclassing' namespace to 'Mogre'
--Added Codec, ImageCodec classes
--Added ExternalTextureSource, ExternalTextureSourceManager classes
--Added ParticleSystemRenderer, BillboardParticleRenderer classes
--Added StringConverter, StringInterface/IStringInterface classes
--Added ParamCommand class, ParameterDef_NativePtr and ParamDictionary_NativePtr structs
	(for Ogre's ParameterDef and ParamDictionary)
--Added Box, PixelBox, PixelUtil.
--Removed ManagedDataStreamPtr and added ManagedDataStream.
	To get the equivalent of ManagedDataStreamPtr use "new DataStreamPtr( new ManagedDataStream(stream) )". If you don't wrap
	ManagedDataStream with a DataStreamPtr, call Dispose to clean it up.
--DataStream and MemoryDataStream do not have a finalizer now. If you don't wrap them with a DataStreamPtr/MemoryDataStreamPtr,
	you have to call Dispose to clean them up.
--Removed SetNull method from all *_NativePtr structs, a "ptr = new OgreClass_NativePtr();" accomplishes the same thing
--Renamed 'Destroy' method of *_NativePtr structs to 'DestroyNativePtr' to be more clear that this is not an Ogre method
--Fixed a bug that caused "Entry point not found" exceptions when TextureUnitStates were copied and deleted
--Added OgreException class. You can catch an Ogre exception using the .NET SEHException class and then use
	OgreException.LastException to get information from the native Ogre exception. Added exception handling to the samples.
--Added Fresnel demo
--Added constructors for all classes
